import { initGraphQLTada } from 'gql.tada';

import { introspection } from '@/types/strapi-graphql-env';

export const graphql = initGraphQLTada<{
  introspection: IntrospectionWithPatchedStrapiTypes;
  scalars: {
    DateTime: Date | string;
    Date: Date;
  };
}>();

// The fields 'id' and 'attributes' in the strapi entity types ('Project', 'Event', ...) are nullable
// This is not intended behaviour as those fields can't be null in practice
// GitHub issue: https://github.com/strapi/strapi/issues/11815
//
// This type patches the types generated by gql.tada by changing the 'id' and 'attribute' fields of strapi
// entitites to required/non-nullable types
type StrapiTypes = introspection['types'];

type IntrospectionWithPatchedStrapiTypes = Omit<introspection, 'types'> & {
  types: {
    // K is the type name
    [K in keyof StrapiTypes]: StrapiTypes[K] extends StrapiEntityType
      ? {
          kind: StrapiTypes[K]['kind'];
          name: StrapiTypes[K]['name'];
          // Overwrite id and attributes field as required
          fields: {
            id: {
              name: 'id';
              type: StrapiRequiredFieldType<StrapiTypes[K]['fields']['id']['type']>;
            };
            attributes: {
              name: 'attributes';
              type: StrapiRequiredFieldType<StrapiTypes[K]['fields']['attributes']['type']>;
            };
          };
        }
      : StrapiTypes[K];
  };
};

type StrapiEntityType = {
  kind: string;
  name: string;
  fields: {
    id: {
      name: 'id';
      type: {
        kind: 'SCALAR';
        name: 'ID';
        ofType: null;
      };
    };
    attributes: {
      name: 'attributes';
      type: {
        kind: string;
        name: string;
      };
    };
  };
};

type StrapiRequiredFieldType<T> = {
  kind: 'NON_NULL';
  name: never;
  ofType: T;
};
